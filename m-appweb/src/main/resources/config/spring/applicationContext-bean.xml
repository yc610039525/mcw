<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/cache
        	http://www.springframework.org/schema/cache/spring-cache-3.2.xsd
        	http://www.springframework.org/schema/tx 
			http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
			">
	
	<context:component-scan base-package="cn.cd.caoyeung.webapp.*" />
	<!-- ========================================分隔线========================================= -->
	<bean class="cn.cd.caoyeung.webapp.context.SpringContextUtils" />
	<!-- ApplicationContext的邮件事件 -->
	<bean class="cn.cd.caoyeung.webapp.event.EmainNotifier" />
	<!-- ========================================分隔线========================================= -->
	<!-- <bean id="chinese_aop" class="cn.cd.caoyeung.webapp.aop.Chinese" />

	<bean id="XmlAspect" class="cn.cd.caoyeung.webapp.aop.aspect.XmlAspect" />

	<aop:config>
		<aop:aspect id="aspect" ref="XmlAspect">
			<aop:after-returning pointcut="execution(* cn.cd.caoyeung.webapp.aop.*.*(..))"
				method="afterReturn" returning="retval" />
			pointcut="execution(* com.team.cd.aop.*.*(..)) and args(food,time,..)"
			<aop:before pointcut="execution(* cn.cd.caoyeung.*.*(..))"
				method="before" />
		</aop:aspect>
	</aop:config> -->
	<!-- 启用Spring对@AspectJ的支持  proxy-target-class="true"  -->
	<aop:aspectj-autoproxy/>
	<!-- <context:property-placeholder location="classpath*:*.properties" /> -->
<!-- 	<bean id="configurerHelper"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath*:*.properties</value>
			</list>
		</property>
	</bean> -->
	<!-- PropertyPlaceholderConfigurer 功能扩展 -->
	<bean id="propertyConfigurer" class="cn.cd.caoyeung.webapp.common.file.SysProperty"
		factory-method="getInstance">
		<property name="locations">
			<list>
				<value>classpath*:*.properties</value>
			</list>
		</property>
		<!-- <property name="custLocations">
			<list>
				<value>classpath*:custcfg.properties</value>
				<value>classpath*:custcfg-*.properties</value>
			</list>
		</property> -->
		<!-- <property name="srvLocation" value="classpath*:servercfg.xml" /> -->
	</bean>
	<!-- <bean id="applicationContext" class="org.apache.axis2.extensions.spring.receivers.ApplicationContextHolder" 
		/> <bean id="springWebService" class="com.cnblog.yc610039525.ws.axis.SpringWebServiceAxis"/> -->
	<!-- ========================================分隔线========================================= -->
	<bean id="cacheManager"
		class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="classpath:ehcache.xml" />
	</bean>
	<bean id="ehCacheManager" class="org.springframework.cache.ehcache.EhCacheCacheManager">
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	<bean id="methodCache" class="org.springframework.cache.ehcache.EhCacheFactoryBean">
		<property name="cacheManager" ref="cacheManager" />
		<property name="cacheName" value="xmlCache" />
	</bean>
	<bean id="cacheService" class="cn.cd.caoyeung.webapp.common.cache.EhCacheServiceImpl">
		<property name="cache">
			<ref local="methodCache" />
		</property>
	</bean>
	
	<!-- <bean id="SwaggerConfig" class="cn.cd.caoyeung.webapp.common.config.SwaggerConfig" /> -->
	<!--启用缓存注解开关 <cache:annotation-driven cache-manager="cacheManager"/> -->
	
	<!-- ========================================配置数据源========================================= -->
    <!-- 配置数据源，使用的是alibaba的Druid(德鲁伊)数据源 -->
    <bean name="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
       <!--<property name="url" value="jdbc:log4jdbc:oracle:thin:@182.151.199.4:1521:irms" /> -->
        <property name="url" value="${url}" />
        <property name="driverClassName" value="${driverClassName}" />
        <property name="username" value="${username}" />
        <property name="password" value="${password}" />
        <!-- 初始化连接大小 -->
        <property name="initialSize" value="0" />
        <!-- 连接池最大使用连接数量 -->
        <property name="maxActive" value="20" />
        <!-- 连接池最大空闲 -->
        <property name="maxIdle" value="20" />
        <!-- 连接池最小空闲 -->
        <property name="minIdle" value="0" />
        <!-- 获取连接最大等待时间 -->
        <property name="maxWait" value="60000" />
        
        <property name="poolPreparedStatements" value="true" /> 
        <property name="maxPoolPreparedStatementPerConnectionSize" value="33" /> 
       
        <property name="validationQuery" value="${validationQuery}" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />
        <property name="testWhileIdle" value="true" />
        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="25200000" />
        <!-- 打开removeAbandoned功能 -->
        <property name="removeAbandoned" value="true" />
        <!-- 1800秒，也就是30分钟 -->
        <property name="removeAbandonedTimeout" value="1800" />
        <!-- 关闭abanded连接时输出错误日志 -->
        <property name="logAbandoned" value="true" />
        <!-- 监控数据库 -->
        <!-- <property name="filters" value="stat" /> -->
        <property name="filters" value="mergeStat" />
    </bean>
    <!-- ========================================分隔线========================================= -->
    <!-- ========================================针对myBatis的配置项============================== -->
    <!-- 配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
        <property name="dataSource" ref="dataSource" />
        <!-- <property name="mapperLocations">
        	<list>
                <value>classpath*:mapping/**/*Mapper.xml</value>
            </list>
        </property> -->
    </bean>
    <!-- classpath*:sqlmap/*-mapper.xml -->
    <!-- 配置扫描器 -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.cd.caoyeung.webapp.mapper" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>
    <!-- ========================================分隔线========================================= -->
    <!-- 配置Spring的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>

    <!-- 注解方式配置事物 -->
    <!-- <tx:annotation-driven transaction-manager="transactionManager" /> -->

    <!-- 拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="add*" propagation="REQUIRED" />
            <tx:method name="append*" propagation="REQUIRED" />
            <tx:method name="insert*" propagation="REQUIRED" />
            <tx:method name="save*" propagation="REQUIRED" />
            <tx:method name="update*" propagation="REQUIRED" />
            <tx:method name="modify*" propagation="REQUIRED" />
            <tx:method name="edit*" propagation="REQUIRED" />
            <tx:method name="delete*" propagation="REQUIRED" />
            <tx:method name="remove*" propagation="REQUIRED" />
            <tx:method name="repair" propagation="REQUIRED" />
            <tx:method name="delAndRepair" propagation="REQUIRED" />

            <tx:method name="get*" propagation="SUPPORTS" />
            <tx:method name="find*" propagation="SUPPORTS" />
            <tx:method name="load*" propagation="SUPPORTS" />
            <tx:method name="search*" propagation="SUPPORTS" />
            <tx:method name="datagrid*" propagation="SUPPORTS" />

            <tx:method name="*" propagation="SUPPORTS" />
        </tx:attributes>
    </tx:advice>
    <aop:config>
        <aop:pointcut id="transactionPointcut" expression="execution(* cn.cd.caoyeung.webapp..*Impl.*(..))" />
        <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
    </aop:config>


    <!-- 配置druid监控spring jdbc -->
    <bean id="druid-stat-interceptor" class="com.alibaba.druid.support.spring.stat.DruidStatInterceptor">
    </bean>
    <bean id="druid-stat-pointcut" class="org.springframework.aop.support.JdkRegexpMethodPointcut" scope="prototype">
        <property name="patterns">
            <list>
                <value>cn.cd.caoyeung.webapp..*Impl</value>
            </list>
        </property>
    </bean>
    <aop:config>
        <aop:advisor advice-ref="druid-stat-interceptor" pointcut-ref="druid-stat-pointcut" />
    </aop:config>

</beans> 