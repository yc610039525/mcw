<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans  
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/tx 
            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
            http://www.springframework.org/schema/context   
            http://www.springframework.org/schema/context/spring-context.xsd 
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc.xsd
            http://www.springframework.org/schema/aop 
            http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
	<!-- 
	  <mvc:annotation-driven/>会自动注册
	   DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter两个bean, 
	       是spring MVC为@Controllers分发请求所必须的。 并提供了：数据绑定支持， 
	    @NumberFormatannotation支持， 
		@DateTimeFormat支持， 
		@Valid支持，读写XML的支持（JAXB），读写JSON的支持（Jackson）。
		 后面，我们处理响应ajax请求时，就使用到了对json的支持
		 使用了该驱动注册就无法定义下面interceptors属性 -->
	<context:component-scan base-package="cn.cd.caoyeung.webapp.controller">
		<!-- <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" /> -->
		<context:include-filter type="regex" expression="cn.cd.caoyeung.webapp.controller.*" />   
	</context:component-scan>
	<mvc:annotation-driven />
    <mvc:default-servlet-handler />
    <!-- ========================================分隔线========================================= -->
    <!-- 国际化 
	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>message</value>
			</list>
		</property>
	</bean>
	-->
	<!-- ========================================分隔线========================================= -->
    <!-- 配置JSON响应 -->
	<mvc:annotation-driven>
		<mvc:message-converters register-defaults="true">
			<bean class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter">
				<property name="supportedMediaTypes" value="application/json;charset=UTF-8" />
			</bean>
			<bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json;charset=UTF-8</value>
                        <value>text/html;charset=UTF-8</value>
                    </list>
                </property>
            </bean>
		</mvc:message-converters>
	</mvc:annotation-driven>
	<!-- ========================================分隔线========================================= -->
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:prefix="/" p:suffix=".jsp" />
	<mvc:interceptors>
		<mvc:interceptor>
			<mvc:mapping path="/login.do" />
			<mvc:exclude-mapping path="/" />
			<mvc:exclude-mapping path="/swagger*/**" />
			<mvc:exclude-mapping path="/v2/**" />
			<mvc:exclude-mapping path="/webjars/**" />
            
			<mvc:exclude-mapping path="/*.html" />
			<mvc:exclude-mapping path="/*/*.html" />
			<mvc:exclude-mapping path="index.jsp" />
			<mvc:exclude-mapping path="/checkCode.do" />
			<mvc:exclude-mapping path="/getCode.do" />
			<mvc:exclude-mapping path="/getUserInfo.do" />
			<bean class=" cn.cd.caoyeung.webapp.interceptor.UserSecurityInterceptor" />
		</mvc:interceptor>
	</mvc:interceptors>
	
	<mvc:resources mapping="/swagger-ui.html" location="classpath:/META-INF/resources/"/>
    <mvc:resources mapping="/webjars/**" location="classpath:/META-INF/resources/webjars/"/>
    <mvc:resources location="/img/" mapping="/img/**"/>   
	<mvc:resources location="/js/" mapping="/js/**"/>    
	<mvc:resources location="/css/" mapping="/css/**"/>  
	
    <!-- ========================================分隔线========================================= -->
	
	<!-- context:component-scan包含context:annotation-config功能 
		@Controller 声明Action组件 
		@Service 声明Service组件 
		@Repository 声明Dao组件
		@Component 泛指组件, 当不好归类时 是使用
		@RequestMapping("/menu")请求映射
		@Resource 用于注入，( j2ee提供的 ) 默认按名称装配，@Resource(name="beanName") @Autowired 
		用于注入，(spring提供的) 默认按类型装配 @Transactional( rollbackFor={Exception.class}) 事务管理 
		@ResponseBody @Scope("prototype") 设定bean的作用域 -->
	<!-- ========================================分隔线========================================= -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- 默认编码 -->
		<property name="defaultEncoding" value="utf-8" />
		<!-- 文件大小最大值 -->
		<property name="maxUploadSize" value="10485760" />
		<!-- 内存中的最大值 -->
		<property name="maxInMemorySize" value="40960" />
	</bean>
	<!-- ========================================分隔线========================================= -->
	<!-- Controller AOP-->
	<!-- <aop:aspectj-autoproxy proxy-target-class="true" /> -->
	<aop:aspectj-autoproxy/>

</beans>